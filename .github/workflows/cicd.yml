name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: false

      # 进行格式检查、lint 和 type check
      - name: Install dependencies, format, lint and type check
        run: |
          pnpm install
          pnpm format:check  # 只检查格式，不修改
          pnpm lint
          pnpm type-check

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/love-note-h5:latest
            ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/love-note-h5:${{ github.sha }}

      - name: Upload docker directory
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          source: "./docker/*" # 指定要上传的本地目录
          target: "/root/app/love-note/h5" # 指定目标目录
          strip_components: 1 # 去掉源路径中的第一个组件

      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            # 设置错误时立即退出
            set -e

            echo "开始部署流程..."

            # 登录到阿里云容器服务
            echo "正在登录阿里云容器服务..."
            docker login --username=${{ secrets.ALIYUN_USERNAME }} --password=${{ secrets.ALIYUN_PASSWORD }} ${{ secrets.DOCKER_REGISTRY }} || {
              echo "❌ 登录失败"
              exit 1
            }

            # 进入应用目录
            echo "进入应用目录..."
            cd /root/app/love-note/h5 || {
              echo "❌ 进入目录失败"
              exit 1
            }

            # 检查端口占用
            if lsof -i :80 > /dev/null; then
              echo "停止当前运行的服务..."
              docker-compose down || true
            fi

            # 强制停止并删除旧容器
            echo "清理旧容器..."
            docker-compose down --remove-orphans
            docker rm -f love-note-h5 || true

            # 拉取最新镜像
            echo "拉取最新镜像..."
            docker pull ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/love-note-h5:latest || {
              echo "❌ 拉取镜像失败"
              exit 1
            }

            # 更新服务
            echo "更新服务..."
            docker-compose pull || {
              echo "❌ 拉取服务失败"
              exit 1
            }

            echo "重启服务..."
            docker-compose up -d || {
              echo "❌ 重启服务失败"
              exit 1
            }

            # 检查服务状态
            echo "检查服务状态..."
            sleep 5  # 等待服务启动
            if ! docker-compose ps | grep -q "Up"; then
              echo "❌ 服务未正常运行"
              docker-compose logs h5
              exit 1
            fi

            # 清理旧镜像
            echo "清理旧镜像..."
            docker image prune -f

            echo "✅ 部署完成"
